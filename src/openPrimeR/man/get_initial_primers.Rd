% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/initialize_primers.R
\name{get_initial_primers}
\alias{get_initial_primers}
\title{Creation of Candidate Primers.}
\usage{
get_initial_primers(sample, template.df, primer.lengths,
  mode.directionality = c("fw", "rev"),
  allowed.region.definition = c("within", "any"), init.algo = c("naive",
  "tree"), max.degen = 16, conservation = 1, updateProgress = NULL)
}
\arguments{
\item{sample}{Character vector providing an identifier for the templates.}

\item{template.df}{An object of class \code{Templates} providing
the template sequences for which an initial set of primers is constructed.}

\item{primer.lengths}{Numeric interval providing the 
minimal and maximal allowed lengths of generated primers.}

\item{mode.directionality}{Character vector giving the direction of primers to be created. Either "fw" to create forward primers 
or "rev" to create reverse primers. The default is "fw".}

\item{allowed.region.definition}{A character vector providing the definition
of region where primers are to be constructed.
If \code{allowed.region.definition} is "within", constructed primers lie within the allowed binding region.
If \code{allowed.region.definition} is "any", primers overlap with the allowed binding region.
The default is "within".}

\item{init.algo}{Algorithm for initializing primers.
If you set \code{init.algo} to "tree", then initial primers will be generated
by forming degenerate consensus sequences using a tree-based approach. 
This option requires MAFFT for multiple alignments (see notes). 
If \code{init.algo} is set to "naive", initial primers are
generated by extracting substrings from the template target regions.}

\item{max.degen}{A numeric providing the maximal allowed degeneration of created primers.}

\item{conservation}{The percentile of top-conserved template
regions to consider. The value of \code{conservation} should be 
in the range[0,1].
If the \code{conservation} is set to 1 (the default), all regions 
are considered.}

\item{updateProgress}{A Shiny progress object; by default
this is set to \code{NULL} such that no callback is used.}
}
\value{
A data frame with candidate primers for optimization.
}
\description{
Creates a set of primer candidates based on the input template
sequences. This set of primers can be used to create
custom primer design algorithms.
}
\note{
If you want to set \code{init.algo} to "tree", please install
MAFFT (http://mafft.cbrc.jp/alignment/software/) on your computer.
}
\examples{
data(Ippolito)
# Naive primer initialization
init.primers <- get_initial_primers("InitialPrimers", template.df, 
                         c(18,18), "fw", init.algo = "naive")
# Tree-based primer initialization (requires MAFFT)
\dontrun{
init.primers <- get_initial_primers("InitialPrimers", template.df, 
                         c(18,18), "fw", init.algo = "tree")
}
}
\seealso{
Other primer functions: \code{\link{Primers-class}},
  \code{\link{check_constraints}},
  \code{\link{check_restriction_sites}},
  \code{\link{create_report}},
  \code{\link{design_primers}},
  \code{\link{filter_primers}},
  \code{\link{primer_significance}},
  \code{\link{score_degen}}, \code{\link{write_primers}}
}
