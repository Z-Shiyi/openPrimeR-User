% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/optimization_global.R
\name{score_primers}
\alias{score_primers}
\title{Scoring of Primers.}
\usage{
score_primers(primer.df, settings,
  active.constraints = names(constraints(settings)), alpha = 0.5)
}
\arguments{
\item{primer.df}{A \code{Primers} object containing the primers
that are to be scored.}

\item{settings}{A \code{DesignSettings} object containing the
settings that are evaluated when computing the deviation.}

\item{active.constraints}{A character vector of constraint identifiers
that are considered for scoring the primers.}

\item{alpha}{A numeric that is used to determine the trade-off
between the impact of the maximal observed deviation and the total
deviation. At its default \code{alpha} is set to 0.5 such that
the maximal deviation and the total deviation have an equal weight
when computing the penalties.}
}
\value{
A data frame containing scores for the primers.
}
\description{
Computes scores for a set of primers based on the deviations
of the primers from the constraints.
}
\details{
The penalty of a primer is computed in the following way. Let 
\code{d} be a vector indicating the absolute deviations from individual constraints
and let \code{p} be the scalar penalty that is assigned to a primer. We define
\deqn{p = \alpha \cdot \max_i d_i + \sum_i (1 - \alpha) \cdot d_i}
such that for large values of \code{alpha} the maximal deviation 
dominates giving rise to a local penalty (reflecting the largest absolute deviation) and for small 
\code{alpha} the total deviation dominates giving rise to a global penalty 
(reflecting the sum of constraint deviations). 
When \code{alpha} is 1 only the most extreme absolute deviation is considered and
when \code{alpha} is 0 the sum of all absolute deviations is computed.
}
\examples{
data(Ippolito)
primer.scores <- score_primers(primer.df, settings)
}
