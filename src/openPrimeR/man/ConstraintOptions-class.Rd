% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/constraints.R
\docType{class}
\name{ConstraintOptions-class}
\alias{ConstraintOptions-class}
\alias{ConstraintOptions}
\title{Class for Constraint Options.}
\value{
A \code{ConstraintOptions} object.
}
\description{
The \code{ConstraintOptions} class encapsulates the options
for constraint computations.
}
\section{Slots}{

\describe{
\item{\code{status}}{Named boolean vector indicating 
which of the possible options are active (\code{TRUE})
and which are not (\code{FALSE}).}

\item{\code{settings}}{Named list with constraint options.
The following fields are permissible:
\describe{
\item{allowed_mismatches:}{The maximal number of allowed mismatches between
a primer and a template sequence. If the number of mismatches of a primer
with a template exceeds the specified value, the primer is not considered
to cover the corresponding template when the coverage is being computed.}
\item{allowed_other_binding_ratio:}{Ratio of allowed binding events
outside the target binding ratio. This value should be in the interval
[0,1]. If the specified value is greater than zero, all coverage events
outside the primer binding region are reported. If, however, the
identified ratio of off-target events should exceed the allowed ratio,
a warning is issued. If \code{allowed_other_binding_ratio} is set to \code{0},
only on-target primer binding events are reported.
The setting of \code{allowed_other_binding_ratio} is ignored when designing primers, 
which always uses a value of 0.}
\item{allowed_region_definition:}{The definition of the target
binding regions that is used for evaluating the coverage.
In case that \code{allowed_region_definition} is \code{within}, primers have to lie within the allowed binding region.
If \code{allowed_region_definition} is \code{any}, primers only have to overlap with the target binding region.}
\item{hexamer_coverage:}{If \code{hexamer_coverage} is set to "active", primers whose 3' hexamer (the last 6 bases) is fully complementary to the corresponding
template region are automatically considered to cover the template. 
If \code{hexamer_coverage} is set to \code{inactive}, 
hexamer complementarity does not guarantee template coverage.}
}}
}}

\examples{
# Initialize a new 'ConstraintOptions' object:
constraint.options <- new("ConstraintOptions")
# Retrieve the constraint options from a 'DesignSettings' object:
data(Ippolito) # loads a 'DesignSettings' object into 'settings'
conOptions(settings)
# Prevent off-target binding:
conOptions(settings)$allowed_other_binding_ratio <- 0
}
\seealso{
Other settings functions: \code{\link{ConstraintSettings-class}},
  \code{\link{CoverageConstraints-class}},
  \code{\link{DesignSettings-class}},
  \code{\link{PCR_Conditions-class}}, \code{\link{PCR}},
  \code{\link{conOptions}}, \code{\link{constraintLimits}},
  \code{\link{constraints}}, \code{\link{cvg_constraints}},
  \code{\link{read_settings}}
}
\keyword{Classes}
